{"ast":null,"code":"var _jsxFileName = \"/Users/nathen/web3/src/component/DefaultView.js\";\nimport React from 'react';\nimport MovieList from './MovieList.js';\nimport Header from './HeaderApp.js';\nimport FilteredMovieList from './FilteredMovieList.js';\nimport Favorites from './Favorites.js';\n\nclass DefaultView extends React.Component {\n  constructor(props) {\n    super(props); // this.state = { movie: this.props.movies, filteredMovies: [] };\n    // this.state.movies = this.props.movies;\n\n    this.addFav = poster => {\n      this.props.addsFav(poster);\n    };\n\n    this.filterMovie = (title, minYear, maxYear, minRating, maxRating) => {\n      let initialList = this.props.movies;\n      let sortedTitle = [];\n      let sortedRating = [];\n      let sortedYear = [];\n      this.setState({\n        movies: initialList\n      });\n\n      if (title) {\n        sortedTitle = initialList.filter(movie => {\n          if (movie.title.toLowerCase().includes(title.toLowerCase())) {\n            return movie;\n          }\n        });\n      } else {\n        sortedTitle = initialList;\n      }\n\n      if (minRating && maxRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (minRating <= movie.ratings.average && movie.ratings.average <= maxRating) {\n            return movie;\n          }\n        });\n      } else if (minRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (minRating <= movie.ratings.average) {\n            return movie;\n          }\n        });\n      } else if (maxRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (movie.ratings.average <= maxRating) {\n            return movie;\n          }\n        });\n      }\n\n      if (sortedRating.length == 0) {\n        sortedRating = sortedTitle;\n      }\n\n      if (minYear && maxYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (minYear <= movie.release_date.substring(0, 4) && movie.release_date.substring(0, 4) <= maxYear) {\n            return movie;\n          }\n        });\n      } else if (minYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (minYear <= movie.release_date.substring(0, 4)) {\n            return movie;\n          }\n        });\n      } else if (maxYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (movie.release_date.substring(0, 4) <= maxYear) {\n            return movie;\n          }\n        });\n      }\n\n      if (sortedYear.length == 0) {\n        sortedYear = sortedRating;\n      }\n\n      this.setState({\n        filteredMovies: sortedYear\n      });\n      this.setState({\n        showFiltered: true\n      });\n    };\n\n    this.clearFilter = () => {\n      this.setState({\n        filteredMovies: {},\n        showFiltered: false\n      });\n    };\n\n    this.sortAlphabet = movieArray => {\n      movieArray.sort((a, b) => {\n        var x = a.title.toLowerCase();\n        var y = b.title.toLowerCase();\n\n        if (x < y) {\n          return -1;\n        }\n\n        if (x > y) {\n          return 1;\n        }\n\n        return 0;\n      }); // this.setState({ movie: movieArray });\n\n      return movieArray;\n    };\n\n    this.sortRating = movieArray => {\n      console.log(\"sort rating\");\n      movieArray.sort((a, b) => {\n        var x = a.ratings.average;\n        var y = b.ratings.average;\n\n        if (x < y) {\n          return -1;\n        }\n\n        if (x > y) {\n          return 1;\n        }\n\n        return 0;\n      }); // this.setState({ movie: movieArray });\n      // return movieArray;\n    };\n\n    this.state = {\n      movies: this.sortAlphabet(this.props.movies),\n      loaded: false\n    };\n    this.state = {\n      title: \"\",\n      yearBefore: \"\",\n      ratingBefore: \"\"\n    };\n    this.state.filteredMovies = {};\n    this.state.showFiltered = false;\n    console.log(\"c\");\n  }\n\n  render() {\n    if (this.props.loaded) {\n      if (!this.state.showFiltered) {\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Favorites, {\n          favs: this.props.favsList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(MovieList, {\n          loaded: this.props.loaded,\n          favsList: this.props.favsList,\n          movies: this.props.movies,\n          addFav: this.addFav,\n          filterMovie: this.filterMovie,\n          clearFilter: this.clearFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(Favorites, {\n          favs: this.props.favsList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(FilteredMovieList, {\n          loaded: this.props.loaded,\n          movies: this.state.filteredMovies,\n          title: this.state.title,\n          yearBefore: this.state.yearBefore,\n          ratingBefore: this.state.ratingBefore,\n          addFav: this.addFav,\n          filterMovie: this.filterMovie,\n          clearFilter: this.clearFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }));\n      }\n    } else {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-spinner fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default DefaultView;","map":{"version":3,"sources":["/Users/nathen/web3/src/component/DefaultView.js"],"names":["React","MovieList","Header","FilteredMovieList","Favorites","DefaultView","Component","constructor","props","addFav","poster","addsFav","filterMovie","title","minYear","maxYear","minRating","maxRating","initialList","movies","sortedTitle","sortedRating","sortedYear","setState","filter","movie","toLowerCase","includes","ratings","average","length","release_date","substring","filteredMovies","showFiltered","clearFilter","sortAlphabet","movieArray","sort","a","b","x","y","sortRating","console","log","state","loaded","yearBefore","ratingBefore","render","favsList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MovieList from './MovieList.js';\nimport Header from './HeaderApp.js';\n\nimport FilteredMovieList from './FilteredMovieList.js';\nimport Favorites from './Favorites.js';\n\nclass DefaultView extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = { movie: this.props.movies, filteredMovies: [] };\n        // this.state.movies = this.props.movies;\n        this.state = { movies: this.sortAlphabet(this.props.movies), loaded: false };\n        this.state = { title: \"\", yearBefore: \"\", ratingBefore: \"\" };\n        this.state.filteredMovies = {};\n        this.state.showFiltered = false;\n\n        console.log(\"c\");\n    }\n\n    addFav = (poster) => {\n        this.props.addsFav(poster);\n    }\n\n\n    filterMovie = (title, minYear, maxYear, minRating, maxRating) => {\n\n        let initialList = this.props.movies;\n        let sortedTitle = [];\n        let sortedRating = [];\n        let sortedYear = [];\n\n        this.setState({ movies: initialList })\n        if (title) {\n            sortedTitle = initialList.filter((movie) => {\n                if ((movie.title.toLowerCase()).includes(title.toLowerCase())) {\n                    return movie;\n                }\n            }\n            )\n        } else { sortedTitle = initialList }\n\n        if (minRating && maxRating) {\n            sortedRating = sortedTitle.filter((movie) => {\n                if (minRating <= movie.ratings.average && movie.ratings.average <= maxRating) {\n                    return movie;\n                }\n            })\n        }\n        else if (minRating) {\n            sortedRating = sortedTitle.filter((movie) => {\n                if (minRating <= movie.ratings.average) {\n                    return movie;\n                }\n            })\n        }\n        else if (maxRating) {\n            sortedRating = sortedTitle.filter((movie) => {\n                if (movie.ratings.average <= maxRating) {\n                    return movie;\n                }\n            })\n        }\n        if (sortedRating.length == 0) { sortedRating = sortedTitle }\n\n        if (minYear && maxYear) {\n            sortedYear = sortedRating.filter((movie) => {\n                if (minYear <= movie.release_date.substring(0, 4) && movie.release_date.substring(0, 4) <= maxYear) {\n                    return movie;\n                }\n            })\n        }\n        else if (minYear) {\n            sortedYear = sortedRating.filter((movie) => {\n                if (minYear <= movie.release_date.substring(0, 4)) {\n                    return movie;\n                }\n            })\n        }\n        else if (maxYear) {\n            sortedYear = sortedRating.filter((movie) => {\n                if (movie.release_date.substring(0, 4) <= maxYear) {\n                    return movie;\n                }\n            })\n        }\n        if (sortedYear.length == 0) { sortedYear = sortedRating }\n        this.setState({ filteredMovies: sortedYear });\n        this.setState({ showFiltered: true });\n\n    }\n\n    clearFilter = () => {\n        this.setState({ filteredMovies: {}, showFiltered: false });\n    }\n\n    sortAlphabet = (movieArray) => {\n        movieArray.sort((a, b) => {\n            var x = a.title.toLowerCase();\n            var y = b.title.toLowerCase();\n            if (x < y) { return -1; }\n            if (x > y) { return 1; }\n            return 0;\n        })\n        // this.setState({ movie: movieArray });\n        return movieArray;\n    }\n\n    // sortYear = (movieArray) => {\n    //     movieArray.sort((a, b) => {\n    //         var x = a.title.toLowerCase();\n    //         var y = b.title.toLowerCase();\n    //         if (x < y) { return -1; }\n    //         if (x > y) { return 1; }\n    //         return 0;\n    //     })\n    //     return movieArray;\n    // }\n\n    sortRating = (movieArray) => {\n        console.log(\"sort rating\");\n        movieArray.sort((a, b) => {\n            var x = a.ratings.average;\n            var y = b.ratings.average;\n            if (x < y) { return -1; }\n            if (x > y) { return 1; }\n            return 0;\n        })\n        // this.setState({ movie: movieArray });\n        // return movieArray;\n    }\n\n    render() {\n        if (this.props.loaded) {\n            if (!this.state.showFiltered) {\n                return (\n                    <section>\n                        <Header />\n                        <Favorites favs={this.props.favsList} />\n                    \n                        <MovieList loaded={this.props.loaded} favsList={this.props.favsList} movies={this.props.movies} addFav={this.addFav} filterMovie={this.filterMovie} clearFilter={this.clearFilter} />\n                    </section>\n                );\n            }\n            else {\n                return (\n                    <section>\n                        <Header />\n                        <Favorites favs={this.props.favsList} />\n                        <FilteredMovieList loaded={this.props.loaded} movies={this.state.filteredMovies} title={this.state.title} yearBefore={this.state.yearBefore} ratingBefore={this.state.ratingBefore} addFav={this.addFav} filterMovie={this.filterMovie} clearFilter={this.clearFilter} />\n\n                    </section >\n                );\n            }\n        } else {\n            return (<span><i className=\"fas fa-spinner fa-spin\"></i></span>);\n        }\n    }\n\n\n}\n\nexport default DefaultView;"]},"metadata":{},"sourceType":"module"}