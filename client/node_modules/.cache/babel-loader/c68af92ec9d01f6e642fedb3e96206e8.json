{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leris\\\\Desktop\\\\practice-assg\\\\client\\\\src\\\\component\\\\MovieDetails.js\";\nimport React from \"react\";\nimport Link from 'react-router-dom';\nimport Ratings from './Ratings.js';\nimport Modal from 'react-modal';\nimport ModalHandler from './ModalHandler.js';\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.addFav = () => {\n      this.props.addFav(this.props.movieData); // change BACK\n    };\n\n    this.state = {\n      movieData: [],\n      loaded: false,\n      showModal: false\n    };\n  }\n\n  render() {\n    console.log(this.props.movieData.id);\n    const imgUrl = `https://image.tmdb.org/t/p/w185/${this.props.movieData.poster}`;\n    let companies,\n        countries,\n        keywords,\n        genres = \"\";\n\n    if (this.props.movieData.production.companies) {\n      companies = this.props.movieData.production.companies.map((company, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          id: \"company\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 24\n          }\n        }, company.name);\n      });\n    } else {\n      companies = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 30\n        }\n      }, \"No company information available!\");\n    }\n\n    if (this.props.movieData.production.countries) {\n      countries = this.props.movieData.production.countries.map((country, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          id: \"country\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }\n        }, country.name);\n      });\n    } else {\n      countries = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }\n      }, \"No country information available!\");\n    }\n\n    if (this.props.movieData.details.keywords) {\n      keywords = this.props.movieData.details.keywords.map((keyword, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          id: \"keyword\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        }, \"#\", keyword.name);\n      });\n    } else {\n      keywords = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, \"No keywords available!\");\n    }\n\n    if (this.props.movieData.details.genres) {\n      genres = this.props.movieData.details.genres.map((genre, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          id: \"genre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        }, genre.name);\n      });\n    } else {\n      genres = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }\n      }, \"No genre information available!\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.showModal,\n      overlayClassName: \"Overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHandler, {\n      page: \"details\",\n      poster: this.props.movieData.poster,\n      closeModal: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"movie-details-column-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, this.props.movieData.title), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imgUrl,\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, this.props.movieData.tagline, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 59\n      }\n    }), \"(\", this.props.movieData.runtime, \" mins)\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"movie-details-column-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addFav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Add To Favorites\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"It was released in \", this.props.movieData.release_date, \" and had a revenue of $\", this.props.movieData.revenue, \".\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 137\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.themoviedb.org/movie/\" + this.props.movieData.tmdb_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"TMDB\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.imdb.com/title\" + this.props.movieData.imdb_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 115\n      }\n    }, \"IMDB\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 193\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, this.props.movieData.details.overview), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Popularity: \"), this.props.movieData.ratings.popularity, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Average Rating: \"), /*#__PURE__*/React.createElement(Ratings, {\n      rating: this.props.movieData.ratings.average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Rating Count: \"), this.props.movieData.ratings.count), \"Companies\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-companies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, companies), \"Countries\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-countries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, countries), \"Keywords\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-keywords\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, keywords), \"Genre\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"details-genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, genres)));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["C:/Users/leris/Desktop/practice-assg/client/src/component/MovieDetails.js"],"names":["React","Link","Ratings","Modal","ModalHandler","MovieDetails","Component","constructor","props","openModal","setState","showModal","closeModal","addFav","movieData","state","loaded","render","console","log","id","imgUrl","poster","companies","countries","keywords","genres","production","map","company","key","name","country","details","keyword","genre","title","tagline","runtime","textAlign","release_date","revenue","tmdb_id","imdb_id","overview","ratings","popularity","average","count"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Link from 'react-router-dom';\r\nimport Ratings from './Ratings.js';\r\nimport Modal from 'react-modal';\r\nimport ModalHandler from './ModalHandler.js';\r\n\r\n\r\nclass MovieDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { movieData: [], loaded: false, showModal: false };\r\n    }\r\n\r\n    openModal = () => { this.setState({ showModal: true }); }\r\n    closeModal = () => { this.setState({ showModal: false }); }\r\n\r\n    render() {\r\n        console.log(this.props.movieData.id);\r\n        const imgUrl = `https://image.tmdb.org/t/p/w185/${this.props.movieData.poster}`;\r\n        let companies, countries, keywords, genres = \"\";\r\n        if (this.props.movieData.production.companies) {\r\n            companies = this.props.movieData.production.companies.map((company, key) => {\r\n                return <div key={key} id=\"company\">{company.name}</div>;\r\n            })\r\n        } else { companies = <div>No company information available!</div>; }\r\n\r\n        if (this.props.movieData.production.countries) {\r\n            countries = this.props.movieData.production.countries.map((country, key) => {\r\n                return <div key={key} id=\"country\">{country.name}</div>;\r\n            })\r\n        } else { countries = <div>No country information available!</div>; }\r\n\r\n        if (this.props.movieData.details.keywords) {\r\n            keywords = this.props.movieData.details.keywords.map((keyword, key) => {\r\n                return < div key={key} id=\"keyword\">#{keyword.name}</ div>;\r\n            })\r\n        } else { keywords = <div>No keywords available!</div> }\r\n\r\n        if (this.props.movieData.details.genres) {\r\n            genres = this.props.movieData.details.genres.map((genre, key) => {\r\n                return <div key={key} id=\"genre\">{genre.name}</div>;\r\n            })\r\n        } else { genres = <div>No genre information available!</div> }\r\n\r\n        return (\r\n            <div id=\"movie-details\">\r\n\r\n                <Modal isOpen={this.state.showModal} overlayClassName=\"Overlay\">\r\n                    <ModalHandler page={\"details\"} poster={this.props.movieData.poster} closeModal={this.closeModal}></ModalHandler>\r\n                </Modal>\r\n\r\n                <div id=\"movie-details-column-1\">\r\n                    <h1>{this.props.movieData.title}</h1>\r\n                    <div id=\"poster\">\r\n                        <img src={imgUrl} onClick={this.openModal} />\r\n                        <div>\r\n                            {this.props.movieData.tagline}<br />({this.props.movieData.runtime} mins)\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"movie-details-column-2\">\r\n                    <div style={{ textAlign: 'right' }}>\r\n\r\n                        <button onClick={this.addFav} >Add To Favorites</button>\r\n                    </div>\r\n\r\n                    <div id=\"details-details\">\r\n                        <div>\r\n                            It was released in {this.props.movieData.release_date} and had a revenue of ${this.props.movieData.revenue}.<br />\r\n                            <a href={\"https://www.themoviedb.org/movie/\" + this.props.movieData.tmdb_id}>TMDB</a> <a href={\"https://www.imdb.com/title\" + this.props.movieData.imdb_id}>IMDB</a><br />\r\n                        </div>\r\n                        <div id='details-overview'>\r\n                            {this.props.movieData.details.overview}\r\n                        </div>\r\n                        <b>Popularity: </b>{this.props.movieData.ratings.popularity}<br />\r\n                        <b>Average Rating: </b><Ratings rating={this.props.movieData.ratings.average} />\r\n                        <b>Rating Count: </b>{this.props.movieData.ratings.count}\r\n                    </div>\r\n\r\n                    Companies\r\n                    <div id=\"details-companies\">\r\n                        {companies}\r\n                    </div>\r\n\r\n                    Countries\r\n                    <div id=\"details-countries\">\r\n                        {countries}\r\n                    </div>\r\n\r\n                    Keywords\r\n                    <div id=\"details-keywords\">\r\n                        {keywords}\r\n                    </div>\r\n\r\n                    Genre\r\n                    <div id=\"details-genres\">\r\n                        {genres}\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n\r\n    addFav = () => {\r\n        this.props.addFav(this.props.movieData); // change BACK\r\n    }\r\n\r\n}\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}