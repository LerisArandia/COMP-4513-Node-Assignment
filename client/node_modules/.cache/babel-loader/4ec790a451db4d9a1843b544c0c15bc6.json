{"ast":null,"code":"var _jsxFileName = \"/Users/nathen/LerisWeb3/src/component/MovieDetails.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./MovieDetails.css\";\nimport Ratings from './Ratings.js';\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieData: [],\n      loaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      console.log(\"in movie details\");\n      const url = `http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies.php?id=${this.props.id}`;\n      const response = await fetch(url);\n      const jsonData = await response.json();\n      this.setState({\n        movieData: jsonData,\n        loaded: true\n      });\n      console.log(jsonData);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return this.renderNormal();\n    } else {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-spinner fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }\n\n  renderNormal() {\n    const imgUrl = `https://image.tmdb.org/t/p/w342/${this.state.movieData.poster}`;\n    return React.createElement(\"div\", {\n      id: \"movie-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"movie-details-column-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.movieData.title), React.createElement(\"figure\", {\n      id: \"poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.movieData.tagline, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \"(\", this.state.movieData.runtime, \" mins)\"), React.createElement(\"div\", {\n      id: \"details-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"movie-details-column-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add To Favorites\"), React.createElement(\"div\", {\n      id: \"details-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"It was released in \", this.state.movieData.release_date, \" and had a revenue of $\", this.state.movieData.revenue, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"https://www.themoviedb.org/movie/\" + this.state.movieData.tmdb_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"TMDB\"), \" \", React.createElement(\"a\", {\n      href: \"https://www.imdb.com/title\" + this.state.movieData.imdb_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"IMDB\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.state.movieData.details.overview, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Popularity: \"), this.state.movieData.ratings.popularity, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Average Rating: \"), React.createElement(Ratings, {\n      rating: this.state.movieData.ratings.average,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Rating Count: \"), this.state.movieData.ratings.count), \"Companies\", React.createElement(\"div\", {\n      id: \"details-companies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.movieData.production.companies.map((company, key) => {\n      return React.createElement(\"div\", {\n        key: key,\n        id: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, company.name);\n    })), \"Countries\", React.createElement(\"div\", {\n      id: \"details-countries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.movieData.production.countries.map((country, key) => {\n      return React.createElement(\"div\", {\n        key: key,\n        id: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, country.name);\n    })), \"if(this.state.movieData.details.keywords) \", Keywords, React.createElement(\"div\", {\n      id: \"details-keywords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.movieData.details.keywords.map((keyword, key) => {\n      return React.createElement(\"div\", {\n        key: key,\n        id: \"keyword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, keyword.name);\n    })), \"Genre\", React.createElement(\"div\", {\n      id: \"details-genres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.movieData.details.genres.map((genre, key) => {\n      return React.createElement(\"div\", {\n        key: key,\n        id: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, genre.name);\n    }))));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/Users/nathen/LerisWeb3/src/component/MovieDetails.js"],"names":["React","Link","Ratings","MovieDetails","Component","constructor","props","state","movieData","loaded","componentDidMount","console","log","url","id","response","fetch","jsonData","json","setState","error","render","renderNormal","imgUrl","poster","title","tagline","runtime","release_date","revenue","tmdb_id","imdb_id","details","overview","ratings","popularity","average","count","production","companies","map","company","key","name","countries","country","Keywords","keywords","keyword","genres","genre"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./MovieDetails.css\";\nimport Ratings from './Ratings.js';\n\nclass MovieDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { movieData: [], loaded: false };\n    }\n\n    async componentDidMount() {\n        try {\n            console.log(\"in movie details\");\n            const url = `http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies.php?id=${this.props.id}`;\n\n            const response = await fetch(url);\n            const jsonData = await response.json();\n\n            this.setState({ movieData: jsonData, loaded: true });\n            console.log(jsonData);\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        if (this.state.loaded) {\n            return this.renderNormal();\n        }\n        else {\n            return (<span><i className=\"fas fa-spinner fa-spin\"></i></span>);\n        }\n    }\n\n    renderNormal() {\n        const imgUrl = `https://image.tmdb.org/t/p/w342/${this.state.movieData.poster}`;\n\n        return (\n            <div id=\"movie-details\">\n                <div id=\"movie-details-column-1\">\n                    <h1>{this.state.movieData.title}</h1>\n                    <figure id=\"poster\">\n                        <img src={imgUrl} />\n                        {this.state.movieData.tagline}<br />({this.state.movieData.runtime} mins)\n                    </figure>\n                    <div id=\"details-caption\">\n                    </div>\n                </div>\n                <div id=\"movie-details-column-2\">\n                    <button>Add To Favorites</button>\n                    <div id=\"details-details\">\n                        It was released in {this.state.movieData.release_date} and had a revenue of ${this.state.movieData.revenue}.<br />\n                        <a href={\"https://www.themoviedb.org/movie/\" + this.state.movieData.tmdb_id}>TMDB</a> <a href={\"https://www.imdb.com/title\" + this.state.movieData.imdb_id}>IMDB</a><br />\n                        {this.state.movieData.details.overview}<br />\n                        <b>Popularity: </b>{this.state.movieData.ratings.popularity}<br />\n                        <b>Average Rating: </b><Ratings rating={this.state.movieData.ratings.average} /><br />\n                        <b>Rating Count: </b>{this.state.movieData.ratings.count}\n                    </div>\n\n                    Companies\n                    <div id=\"details-companies\">\n                        {this.state.movieData.production.companies.map((company, key) => {\n                            return <div key={key} id=\"company\">{company.name}</div>;\n                        })}\n                    </div>\n\n                    Countries\n                    <div id=\"details-countries\">\n                        {this.state.movieData.production.countries.map((country, key) => {\n                            return <div key={key} id=\"country\">{country.name}</div>;\n                        })}\n                    </div>\n                    \n                    if(this.state.movieData.details.keywords) {\n                        Keywords\n                    }\n\n  \n                    <div id=\"details-keywords\">\n                        {this.state.movieData.details.keywords.map((keyword, key) => {\n                            return < div key={key} id=\"keyword\">{keyword.name}</ div>;\n                        })}\n                    </div>\n                  \n\n                    Genre\n                    <div id=\"details-genres\">\n                        {this.state.movieData.details.genres.map((genre, key) => {\n                            return <div key={key} id=\"genre\">{genre.name}</div>;\n\n                        })}\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n\n\n\n\n}\n\n\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}