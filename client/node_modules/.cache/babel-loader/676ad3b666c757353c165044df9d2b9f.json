{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leris\\\\Desktop\\\\COMP-4513-Node-Assignment\\\\client\\\\src\\\\component\\\\DefaultView.js\";\nimport React from 'react';\nimport MovieList from './MovieList.js';\nimport Header from './HeaderApp.js';\nimport FilteredMovieList from './FilteredMovieList.js';\nimport Favorites from './Favorites.js';\n\nclass DefaultView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addFav = poster => {\n      // takes a whole movie object\n      this.props.addsFav(poster);\n    };\n\n    this.deleteFav = movie => {\n      this.props.deletesFav(movie);\n    };\n\n    this.filterMovie = (title, minYear, maxYear, minRating, maxRating) => {\n      let initialList = this.props.movies;\n      let sortedTitle = [];\n      let sortedRating = [];\n      let sortedYear = [];\n      this.setState({\n        movies: initialList\n      });\n\n      if (title) {\n        sortedTitle = initialList.filter(movie => {\n          if (movie.title.toLowerCase().includes(title.toLowerCase())) {\n            return movie;\n          }\n        });\n      } else {\n        sortedTitle = initialList;\n      }\n\n      if (minRating && maxRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (minRating <= movie.ratings.average && movie.ratings.average <= maxRating) {\n            return movie;\n          }\n        });\n      } else if (minRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (minRating <= movie.ratings.average) {\n            return movie;\n          }\n        });\n      } else if (maxRating) {\n        sortedRating = sortedTitle.filter(movie => {\n          if (movie.ratings.average <= maxRating) {\n            return movie;\n          }\n        });\n      }\n\n      if (sortedRating.length == 0) {\n        sortedRating = sortedTitle;\n      }\n\n      if (minYear && maxYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (minYear <= movie.release_date.substring(0, 4) && movie.release_date.substring(0, 4) <= maxYear) {\n            return movie;\n          }\n        });\n      } else if (minYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (minYear <= movie.release_date.substring(0, 4)) {\n            return movie;\n          }\n        });\n      } else if (maxYear) {\n        sortedYear = sortedRating.filter(movie => {\n          if (movie.release_date.substring(0, 4) <= maxYear) {\n            return movie;\n          }\n        });\n      }\n\n      if (sortedYear.length == 0) {\n        sortedYear = sortedRating;\n      }\n\n      this.setState({\n        filteredMovies: sortedYear\n      });\n      this.setState({\n        showFiltered: true\n      });\n    };\n\n    this.clearFilter = () => {\n      this.setState({\n        filteredMovies: {},\n        showFiltered: false\n      });\n    };\n\n    this.filterTitle = movieArray => {\n      movieArray.sort((a, b) => {\n        var x = a.title.toLowerCase();\n        var y = b.title.toLowerCase();\n\n        if (x < y) {\n          return -1;\n        }\n\n        if (x > y) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        filteredMovies: movieArray\n      });\n    };\n\n    this.filterYear = movieArray => {\n      movieArray.sort((a, b) => {\n        var x = a.release_date.substring(0, 4);\n        var y = b.release_date.substring(0, 4);\n\n        if (x < y) {\n          return -1;\n        }\n\n        if (x > y) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        filteredMovies: movieArray\n      });\n    };\n\n    this.filterRating = movieArray => {\n      movieArray.sort((a, b) => {\n        var x = a.ratings.average;\n        var y = b.ratings.average;\n\n        if (x < y) {\n          return -1;\n        }\n\n        if (x > y) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        filteredMovies: movieArray\n      });\n    };\n\n    this.state = {\n      movies: this.filterTitle(this.props.movies),\n      loaded: false\n    };\n    this.state = {\n      title: \"\",\n      yearBefore: \"\",\n      ratingBefore: \"\"\n    };\n    this.state.filteredMovies = {};\n    this.state.showFiltered = false;\n    this.state.homeSearch = '';\n  }\n\n  render() {\n    if (this.props.loaded) {\n      if (!this.state.showFiltered) {\n        return /*#__PURE__*/React.createElement(\"section\", {\n          className: \"main\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Favorites, {\n          favs: this.props.favsList,\n          delete: this.deleteFav,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(MovieList, {\n          loaded: this.props.loaded,\n          filterRating: this.filterRating,\n          filterYear: this.filterYear,\n          filterTitle: this.filterTitle,\n          favsList: this.props.favsList,\n          movies: this.props.movies,\n          addFav: this.addFav,\n          filterMovie: this.filterMovie,\n          clearFilter: this.clearFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"section\", {\n          className: \"main\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Favorites, {\n          favs: this.props.favsList,\n          delete: this.deleteFav,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(FilteredMovieList, {\n          loaded: this.props.loaded,\n          filterRating: this.filterRating,\n          filterYear: this.filterYear,\n          filterTitle: this.filterTitle,\n          favsList: this.props.favsList,\n          movies: this.state.filteredMovies,\n          addFav: this.addFav,\n          filterMovie: this.filterMovie,\n          clearFilter: this.clearFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }));\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Favorites, {\n        favs: this.props.favs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }\n      })));\n    }\n  }\n\n}\n\nexport default DefaultView;","map":{"version":3,"sources":["C:/Users/leris/Desktop/COMP-4513-Node-Assignment/client/src/component/DefaultView.js"],"names":["React","MovieList","Header","FilteredMovieList","Favorites","DefaultView","Component","constructor","props","addFav","poster","addsFav","deleteFav","movie","deletesFav","filterMovie","title","minYear","maxYear","minRating","maxRating","initialList","movies","sortedTitle","sortedRating","sortedYear","setState","filter","toLowerCase","includes","ratings","average","length","release_date","substring","filteredMovies","showFiltered","clearFilter","filterTitle","movieArray","sort","a","b","x","y","filterYear","filterRating","state","loaded","yearBefore","ratingBefore","homeSearch","render","favsList","favs"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MovieList from './MovieList.js';\r\nimport Header from './HeaderApp.js';\r\nimport FilteredMovieList from './FilteredMovieList.js';\r\nimport Favorites from './Favorites.js';\r\n\r\nclass DefaultView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { movies: this.filterTitle(this.props.movies), loaded: false };\r\n        this.state = { title: \"\", yearBefore: \"\", ratingBefore: \"\" };\r\n        this.state.filteredMovies = {};\r\n        this.state.showFiltered = false;\r\n        this.state.homeSearch = '';\r\n    }\r\n\r\n\r\n    addFav = (poster) => { // takes a whole movie object\r\n        this.props.addsFav(poster);\r\n    }\r\n\r\n    deleteFav = (movie) => {\r\n        this.props.deletesFav(movie);\r\n    }\r\n\r\n    filterMovie = (title, minYear, maxYear, minRating, maxRating) => {\r\n\r\n        let initialList = this.props.movies;\r\n        let sortedTitle = [];\r\n        let sortedRating = [];\r\n        let sortedYear = [];\r\n\r\n\r\n        this.setState({ movies: initialList })\r\n        if (title) {\r\n            sortedTitle = initialList.filter((movie) => {\r\n                if ((movie.title.toLowerCase()).includes(title.toLowerCase())) {\r\n                    return movie;\r\n                }\r\n            }\r\n            )\r\n        } else { sortedTitle = initialList }\r\n\r\n        if (minRating && maxRating) {\r\n            sortedRating = sortedTitle.filter((movie) => {\r\n                if (minRating <= movie.ratings.average && movie.ratings.average <= maxRating) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        else if (minRating) {\r\n            sortedRating = sortedTitle.filter((movie) => {\r\n                if (minRating <= movie.ratings.average) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        else if (maxRating) {\r\n            sortedRating = sortedTitle.filter((movie) => {\r\n                if (movie.ratings.average <= maxRating) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        if (sortedRating.length == 0) { sortedRating = sortedTitle }\r\n\r\n        if (minYear && maxYear) {\r\n            sortedYear = sortedRating.filter((movie) => {\r\n                if (minYear <= movie.release_date.substring(0, 4) && movie.release_date.substring(0, 4) <= maxYear) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        else if (minYear) {\r\n            sortedYear = sortedRating.filter((movie) => {\r\n                if (minYear <= movie.release_date.substring(0, 4)) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        else if (maxYear) {\r\n            sortedYear = sortedRating.filter((movie) => {\r\n                if (movie.release_date.substring(0, 4) <= maxYear) {\r\n                    return movie;\r\n                }\r\n            })\r\n        }\r\n        if (sortedYear.length == 0) { sortedYear = sortedRating }\r\n        this.setState({ filteredMovies: sortedYear });\r\n        this.setState({ showFiltered: true });\r\n\r\n    }\r\n\r\n    clearFilter = () => {\r\n        this.setState({ filteredMovies: {}, showFiltered: false });\r\n    }\r\n\r\n    filterTitle = (movieArray) => {\r\n        movieArray.sort((a, b) => {\r\n            var x = a.title.toLowerCase();\r\n            var y = b.title.toLowerCase();\r\n            if (x < y) { return -1; }\r\n            if (x > y) { return 1; }\r\n            return 0;\r\n        })\r\n        this.setState({ filteredMovies: movieArray });\r\n    }\r\n\r\n    filterYear = (movieArray) => {\r\n        movieArray.sort((a, b) => {\r\n            var x = a.release_date.substring(0, 4);\r\n            var y = b.release_date.substring(0, 4);\r\n            if (x < y) { return -1; }\r\n            if (x > y) { return 1; }\r\n            return 0;\r\n        })\r\n        this.setState({ filteredMovies: movieArray });\r\n    }\r\n\r\n    filterRating = (movieArray) => {\r\n        movieArray.sort((a, b) => {\r\n            var x = a.ratings.average;\r\n            var y = b.ratings.average;\r\n            if (x < y) { return -1; }\r\n            if (x > y) { return 1; }\r\n            return 0;\r\n        })\r\n        this.setState({ filteredMovies: movieArray });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loaded) {\r\n            if (!this.state.showFiltered) {\r\n                return (\r\n                    <section className='main'>\r\n                        <Header />\r\n                        <Favorites favs={this.props.favsList} delete={this.deleteFav} />\r\n                        <MovieList loaded={this.props.loaded} filterRating={this.filterRating} filterYear={this.filterYear} filterTitle={this.filterTitle} favsList={this.props.favsList} movies={this.props.movies} addFav={this.addFav} filterMovie={this.filterMovie} clearFilter={this.clearFilter} />\r\n                    </section>\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <section className='main'>\r\n                        <Header />\r\n                        <Favorites favs={this.props.favsList} delete={this.deleteFav} />\r\n                        <FilteredMovieList loaded={this.props.loaded} filterRating={this.filterRating} filterYear={this.filterYear} filterTitle={this.filterTitle} favsList={this.props.favsList} movies={this.state.filteredMovies} addFav={this.addFav} filterMovie={this.filterMovie} clearFilter={this.clearFilter} />\r\n                    </section >\r\n                );\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Header />\r\n                    <Favorites favs={this.props.favs} />\r\n                    <span><i className=\"fas fa-spinner fa-spin\"></i></span>\r\n\r\n                </div>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DefaultView;"]},"metadata":{},"sourceType":"module"}