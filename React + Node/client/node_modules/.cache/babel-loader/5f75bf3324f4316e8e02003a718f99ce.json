{"ast":null,"code":"var _jsxFileName = \"/Users/nathen/LerisWeb3/src/component/MovieDetails.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./MovieDetails.css\";\nimport Ratings from './Ratings.js';\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addFav = () => {\n      this.props.addFav(this.props.movieData.poster); // change BACK\n    };\n\n    this.state = {\n      movieData: [],\n      loaded: false\n    };\n  }\n\n  render() {\n    const imgUrl = `https://image.tmdb.org/t/p/w342/${this.props.movieData.poster}`;\n    let companies,\n        countries,\n        keywords,\n        genres = \"\";\n\n    if (this.props.movieData.production.companies) {\n      companies = this.props.movieData.production.companies.map((company, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          id: \"company\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, company.name);\n      });\n    } else {\n      companies = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"No company information available!\");\n    }\n\n    if (this.props.movieData.production.countries) {\n      countries = this.props.movieData.production.countries.map((country, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          id: \"country\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, country.name);\n      });\n    } else {\n      countries = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"No country information available!\");\n    }\n\n    if (this.props.movieData.details.keywords) {\n      keywords = this.props.movieData.details.keywords.map((keyword, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          id: \"keyword\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"#\", keyword.name);\n      });\n    } else {\n      keywords = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"No keywords available!\");\n    }\n\n    if (this.props.movieData.details.genres) {\n      genres = this.props.movieData.details.genres.map((genre, key) => {\n        return React.createElement(\"div\", {\n          key: key,\n          id: \"genre\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, genre.name);\n      });\n    } else {\n      genres = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"No genre information available!\");\n    }\n\n    return React.createElement(\"div\", {\n      id: \"movie-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"movie-details-column-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.movieData.title), React.createElement(\"figure\", {\n      id: \"poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.props.movieData.tagline, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \"(\", this.props.movieData.runtime, \" mins)\"), React.createElement(\"div\", {\n      id: \"details-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"movie-details-column-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addFav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add To Favorites\"), React.createElement(Link, {\n      to: \"./default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Close\")), React.createElement(\"div\", {\n      id: \"details-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"It was released in \", this.props.movieData.release_date, \" and had a revenue of $\", this.props.movieData.revenue, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"https://www.themoviedb.org/movie/\" + this.props.movieData.tmdb_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"TMDB\"), \" \", React.createElement(\"a\", {\n      href: \"https://www.imdb.com/title\" + this.props.movieData.imdb_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"IMDB\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.props.movieData.details.overview, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Popularity: \"), this.props.movieData.ratings.popularity, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Average Rating: \"), React.createElement(Ratings, {\n      rating: this.props.movieData.ratings.average,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Rating Count: \"), this.props.movieData.ratings.count), \"Companies\", React.createElement(\"div\", {\n      id: \"details-companies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, companies), \"Countries\", React.createElement(\"div\", {\n      id: \"details-countries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, countries), \"Keywords\", React.createElement(\"div\", {\n      id: \"details-keywords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, keywords), \"Genre\", React.createElement(\"div\", {\n      id: \"details-genres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, genres)));\n  }\n\n  renderNormal() {}\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/Users/nathen/LerisWeb3/src/component/MovieDetails.js"],"names":["React","Link","Ratings","MovieDetails","Component","constructor","props","addFav","movieData","poster","state","loaded","render","imgUrl","companies","countries","keywords","genres","production","map","company","key","name","country","details","keyword","genre","title","tagline","runtime","release_date","revenue","tmdb_id","imdb_id","overview","ratings","popularity","average","count","renderNormal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./MovieDetails.css\";\nimport Ratings from './Ratings.js';\n\nclass MovieDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { movieData: [], loaded: false };\n    }\n\n    render() {\n        const imgUrl = `https://image.tmdb.org/t/p/w342/${this.props.movieData.poster}`;\n        let companies, countries, keywords, genres = \"\";\n        if (this.props.movieData.production.companies) {\n            companies = this.props.movieData.production.companies.map((company, key) => {\n                return <div key={key} id=\"company\">{company.name}</div>;\n            })\n        } else { companies = <div>No company information available!</div>; }\n\n        if (this.props.movieData.production.countries) {\n            countries = this.props.movieData.production.countries.map((country, key) => {\n                return <div key={key} id=\"country\">{country.name}</div>;\n            })\n        } else { countries = <div>No country information available!</div>; }\n\n        if (this.props.movieData.details.keywords) {\n            keywords = this.props.movieData.details.keywords.map((keyword, key) => {\n                return < div key={key} id=\"keyword\">#{keyword.name}</ div>;\n            })\n        } else { keywords = <div>No keywords available!</div> }\n\n        if (this.props.movieData.details.genres) {\n            genres = this.props.movieData.details.genres.map((genre, key) => {\n                return <div key={key} id=\"genre\">{genre.name}</div>;\n            })\n        } else { genres = <div>No genre information available!</div> }\n\n\n        return (\n            <div id=\"movie-details\">\n                <div id=\"movie-details-column-1\">\n                    <h1>{this.props.movieData.title}</h1>\n                    <figure id=\"poster\">\n                        <img src={imgUrl} />\n                        {this.props.movieData.tagline}<br />({this.props.movieData.runtime} mins)\n                    </figure>\n                    <div id=\"details-caption\">\n                    </div>\n                </div>\n                <div id=\"movie-details-column-2\">\n                    <button onClick={this.addFav}>Add To Favorites</button>\n                    <Link to='./default'>\n                        <button>Close</button>\n\n                    </Link>\n\n                    <div id=\"details-details\">\n                        It was released in {this.props.movieData.release_date} and had a revenue of ${this.props.movieData.revenue}.<br />\n                        <a href={\"https://www.themoviedb.org/movie/\" + this.props.movieData.tmdb_id}>TMDB</a> <a href={\"https://www.imdb.com/title\" + this.props.movieData.imdb_id}>IMDB</a><br />\n                        {this.props.movieData.details.overview}<br />\n                        <b>Popularity: </b>{this.props.movieData.ratings.popularity}<br />\n                        <b>Average Rating: </b><Ratings rating={this.props.movieData.ratings.average} />\n                        <b>Rating Count: </b>{this.props.movieData.ratings.count}\n                    </div>\n\n                    Companies\n                    <div id=\"details-companies\">\n                        {companies}\n                    </div>\n\n                    Countries\n                    <div id=\"details-countries\">\n                        {countries}\n                    </div>\n\n                    Keywords\n                    <div id=\"details-keywords\">\n                        {keywords}\n                    </div>\n\n                    Genre\n                    <div id=\"details-genres\">\n                        {genres}\n                    </div>\n                </div >\n            </div>\n        );\n    }\n\n    addFav = () => {\n        this.props.addFav(this.props.movieData.poster); // change BACK\n    }\n\n    renderNormal() {\n\n    }\n\n\n\n\n\n}\n\n\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}